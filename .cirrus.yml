env:
  CIRRUS_CLONE_DEPTH: 20
  #Possible values for ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa, sonarsource-public-qa
  ARTIFACTORY_PRIVATE_USERNAME: vault-sonarsource-sonar-dummy-oss-private-reader
  ARTIFACTORY_DEPLOY_USERNAME: vault-sonarsource-sonar-dummy-oss-qa-deployer
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa
  GRADLE_USER_HOME: ${CIRRUS_WORKING_DIR}/.gradle

container_definition: &CONTAINER_DEFINITION
  image: ${CIRRUS_AWS_ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/base:j11-g7-latest
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  region: eu-central-1
  namespace: default

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: >
    $CIRRUS_USER_COLLABORATOR == 'true' &&
    $CIRRUS_TAG == "" &&
    ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

setup_gradle_cache_template: &SETUP_GRADLE_CACHE
  gradle_cache:
    folder: .gradle/caches
  create_gradle_directory_script:
    - mkdir -p "${GRADLE_USER_HOME}"

cleanup_gradle_cache_script_template: &CLEANUP_GRADLE_CACHE_SCRIPT
  cleanup_gradle_script:
    - /usr/bin/find "${GRADLE_USER_HOME}/caches/" -name "*.lock" -type f -delete
    - rm -rf "${GRADLE_USER_HOME}/caches/4.10.2/"
    - rm -rf "${GRADLE_USER_HOME}/caches/journal-1/"
    - rm -rf "${GRADLE_USER_HOME}/caches/build-cache-1/"

vault: &VAULT
  vault_script:
    - vault.sh

build_task:
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  env:
    # analysis on next
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    #allow deployment of pull request artifacts to repox
    DEPLOY_PULL_REQUEST: true
    ORG_GRADLE_PROJECT_signingKeyId: 0x7DCD4258
  <<: *SETUP_GRADLE_CACHE
  <<: *VAULT
  build_script:
    - source cirrus-env BUILD
    #read the sign key to memory
    - export ORG_GRADLE_PROJECT_signingKey=$(cat ~/.m2/sign-key.asc)
    - export ORG_GRADLE_PROJECT_signingPassword=${PGP_PASSPHRASE}
    - regular_gradle_build_deploy_analyze
  <<: *CLEANUP_GRADLE_CACHE_SCRIPT

promote_task:
  <<: *ONLY_SONARSOURCE_QA
  depends_on:
    - build
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 0.5
    memory: 500M
  env:
    #artifacts that will have downloadable links in burgr
    ARTIFACTS: org.sonarsource.dummy:sonar-dummy-oss-plugin:jar
  <<: *VAULT
  script:
    - source cirrus-env PROMOTE
    - curl -sfSL -H "Authorization: Bearer $GCF_ACCESS_TOKEN" "$PROMOTE_URL/$GITHUB_REPO/$GITHUB_BRANCH/$BUILD_NUMBER/$PULL_REQUEST"
    - burgr-notify-promotion
