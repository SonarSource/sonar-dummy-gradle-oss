buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.6.2'
    classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2'
  }
}

// Analyze SonarQube with SonarQube!
apply plugin: 'org.sonarqube'
sonarqube {
  properties {
    property 'sonar.projectName', 'SonarSource :: dummy'
    property 'sonar.projectKey', 'org.sonarsource.dummy:dummy-oss'
  }
}

allprojects  {
  apply plugin: 'com.jfrog.artifactory'
  apply plugin: 'maven-publish'

  // Replaces the version defined in sources, usually x.y-SNAPSHOT, by a version identifying the build.
  def buildNumber = System.getProperty("buildNumber")
  if (version.endsWith('-SNAPSHOT') && buildNumber != null) {
    version = version.replace('-SNAPSHOT', ".0.$buildNumber")
  }

  repositories {
    def repository = project.hasProperty('cix') ? 'sonarsource-qa' : 'sonarsource'
    maven {
      url "https://repox.sonarsource.com/${repository}"
    }
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: "jacoco"

  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  tasks.withType(JavaCompile) {
  	options.encoding = 'UTF-8'
  }

  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  ext { 
    pomConfig = {
      //name projectName
      name 'projectName'
      //description project.description
      description 'project.description'
      url 'http://redirect.sonarsource.com/plugins/dummy.html'
      organization {
        name 'SonarSource'
        url 'http://www.sonarsource.com'
      }
      licenses {
        license {
          name 'GNU LGPL 3'
          url 'http://www.gnu.org/licenses/lgpl.txt'
          distribution 'repo'
        }
      }
      scm {
        url 'https://github.com/SonarSource/sonar-dummy-oss'
      }
      developers {
        developer {
          id 'drautureau-sonarsource'
          name 'David Rautureau'
        }
      }
    }
  }

  repositories {
    maven { 
      name = 'sonarsource'
      url "https://repox.sonarsource.com/sonarsource"
    }
    mavenLocal()
  }
}

artifactory {
  clientConfig.setIncludeEnvVars(true)
  clientConfig.setEnvVarsExcludePatterns('*password*,*PASSWORD*,*secret*,*MAVEN_CMD_LINE_ARGS*,sun.java.command,*token*,*TOKEN*,*LOGIN*,*login*')
  contextUrl = System.getenv('ARTIFACTORY_URL')
  publish {    
    repository {
      repoKey = System.getenv('ARTIFACTORY_DEPLOY_REPO')
      username = System.getenv('ARTIFACTORY_DEPLOY_USERNAME')
      password = System.getenv('ARTIFACTORY_DEPLOY_PASSWORD')      
    }
    defaults {
      properties = [
        'vcs.revision': (System.getenv('GIT_COMMIT') ?: System.getenv('GIT_COMMIT')),
        'vcs.branch': (System.getenv('GIT_BRANCH') ?: System.getenv('GIT_BRANCH')),
        'build.name': rootProject.name,
        'build.number': (System.getenv('BUILD_ID') ?: System.getenv('BUILD_NUMBER'))
      ]
      publications('mavenJava')
      publishPom = true // Publish generated POM files to Artifactory (true by default)
      publishIvy = false // Publish generated Ivy descriptor files to Artifactory (true by default)
    }
    clientConfig.info.setBuildNumber(System.getenv('BUILD_NUMBER'))
    clientConfig.info.addEnvironmentProperty('ARTIFACTS_TO_DOWNLOAD', "${project.group}:sonar-dummy-oss-plugin:jar")
    clientConfig.info.addEnvironmentProperty('PROJECT_VERSION', "${version}")
  }  
}
